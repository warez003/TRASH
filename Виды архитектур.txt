Поляков. А. Д. ПКС-019

Виды архитектур

1960-1970 гг.

CISC (англ. Complex Instruction Set Computer — «компьютер с полным набором команд») — тип процессорной архитектуры,
в первую очередь, с нефиксированной длиной команд, а также с кодированием арифметических действий в одной команде
и небольшим числом регистров, многие из которых выполняют строго определенную функцию.

CISC (англ. complex instruction set computing или complex instruction set computer) — тип процессорной архитектуры,
которая характеризуется следующим набором свойств:

1) нефиксированное значение длины команды;
2) арифметические действия кодируются в одной команде;
3) небольшое число регистров, каждый из которых выполняет строго определённую функцию.

Благодаря распространённости процессоров архитектур x86 и x86-64 CISC-системы являются самыми распространёнными
в мире вычислительной техники — они доминируют в сегментах рабочих станций, персональных компьютеров,
серверов начального и среднего уровня, а также мейнфреймов (RISC-системы превалируют в сегментах мобильных устройств,
микроконтроллеров и Unix-серверов старшего уровня).

Основной недостаток CISC-архитектуры в сравнении с RISC — более сложный подход к распараллеливанию вычислений

1975 г.

RISC (англ. Reduced Instruction Set Computer — «компьютер с сокращённым набором команд») — архитектура процессора,
в котором быстродействие увеличивается за счёт упрощения инструкций: их декодирование становится более простым,
а время выполнения — меньшим. Первые RISC-процессоры не имели даже инструкций умножения и деления и не поддерживали
работу с числами с плавающей запятой.

RISC (англ. reduced instruction set computer — компьютер с набором коротких (простых, быстрых) команд)
— архитектура процессора, в которой быстродействие увеличивается за счёт упрощения инструкций,
чтобы их декодирование было более простым, а время выполнения — меньшим. 
Первые RISC-процессоры даже не имели инструкций умножения и деления. 
Это также облегчает повышение тактовой частоты и делает более эффективной суперскалярность 
(распараллеливание инструкций между несколькими исполнительными блоками).

По сравнению с CISC эта архитектура имеет константную длину команды,
а также меньшее количество схожих инструкций, позволяя уменьшить итоговую цену процессора и энергопотребление,
что критично для мобильного сегмента. У RISC также большее количество регистров.

Примеры RISC-архитектур: PowerPC, серия архитектур ARM (ARM7, ARM9, ARM11, Cortex).

В общем случае RISC быстрее CISC. Даже если системе RISC приходится выполнять 4 или 5 команд вместо одной,
которую выполняет CISC, RISC все равно выигрывает в скорости, так как RISC-команды выполняются в 10 раз быстрее.

Отсюда возникает закономерный вопрос: почему многие всё ещё используют CISC, когда есть RISC?
Всё дело в совместимости. x86_64 всё ещё лидер в desktop-сегменте только по историческим причинам. 
Так как старые программы работают только на x86, то и новые desktop-системы должны быть x86(_64), 
чтобы все старые программы и игры могли работать на новой машине.

Для Open Source это по большей части не является проблемой, 
так как пользователь может найти в интернете версию программы под другую архитектуру. 
Сделать же версию проприетарной программы под другую архитектуру может только владелец исходного кода программы.

Характерные особенности RISC-процессоров

1) Фиксированная длина машинных инструкций (например, 32 бита) и простой формат команды.
2) Специализированные команды для операций с памятью — чтения или записи. Операции вида Read-Modify-Write 
(«прочитать-изменить-записать») отсутствуют. 
Любые операции «изменить» выполняются только над содержимым регистров (т. н. архитектура load-and-store).
3) Большое количество регистров общего назначения (32 и более).
4) Отсутствие поддержки операций вида «изменить» над укороченными типами данных — байт, 16-разрядное слово. 
Так, например, система команд DEC Alpha содержала только операции над 64-разрядными словами, 
и требовала разработки и последующего вызова процедур для выполнения операций над байтами, 16- и 32-разрядными словами.
5) Отсутствие микропрограмм внутри самого процессора. То, что в CISC-процессоре исполняется микропрограммами, 
в RISC-процессоре исполняется как обыкновенный (хотя и помещённый в специальное хранилище) машинный код, 
не отличающийся принципиально от кода ядра ОС и приложений. Так, например, обработка отказов страниц в DEC Alpha 
и интерпретация таблиц страниц содержалась в так называемом PALcode (Privileged Architecture Library), 
помещённом в ПЗУ. Заменой PALCode можно было превратить процессор Alpha из 64-разрядного в 32-разрядный, 
а также изменить порядок байтов в слове и формат входов таблиц страниц виртуальной памяти.

1948 - 1950 гг.

MISC (англ. Minimal Instruction Set Computer — «компьютер с минимальным набором команд»).

Увеличение разрядности процессоров привело к идее укладки нескольких команд в одно большое слово (связку, bound). 
Это позволило использовать возросшую производительность компьютера и его возможность обрабатывать одновременно 
несколько потоков данных. Кроме этого, MISC использует стековую модель вычислительного устройства и 
основные команды работы со стеком языка Forth.

Ещё более простая архитектура, используемая в первую очередь для ещё большего уменьшения итоговой цены и энергопотребления
процессора. Используется в IoT-сегменте и недорогих компьютерах, например, роутерах.

Для увеличения производительности во всех вышеперечисленных архитектурах может использоваться 
“спекулятивное исполнение команд”. Это выполнение команды до того, как станет известно, понадобится эта команда или нет.

MISC-принцип может лежать в основе микропрограммы выполнения программ Java и .Net, 
хотя по количеству используемых команд они нарушают принцип MISC.

1980 г.

VLIW (англ. Very Long Instruction Word — «очень длинная машинная команда») — архитектура процессоров с несколькими
вычислительными устройствами. Характеризуется тем, что одна инструкция процессора содержит несколько операций, 
которые должны выполняться параллельно.

VLIW (англ. very long instruction word — «очень длинная машинная команда») — архитектура процессоров с несколькими 
вычислительными устройствами. Характеризуется тем, что одна инструкция процессора содержит несколько операций, 
которые должны выполняться параллельно[1][2]. Фактически это «видимое программисту» микропрограммное управление, 
когда машинный код представляет собой лишь немного свёрнутый микрокод для непосредственного управления аппаратурой.

По сути является архитектурой CISC со своим аналогом спекулятивного исполнения команд, 
только сама спекуляция выполняется во время компиляции, а не во время работы программы, 
из-за чего уязвимости Meltdown и Spectre невозможны для этих процессоров. Компиляторы для процессоров этой архитектуры 
сильно привязаны к конкретным процессорам. Например, в следующем поколении максимальная длина «очень длинной команды» 
может из условных 256 бит стать 512 бит, и тут приходится выбирать между увеличением производительности путём компиляции 
под новый процессор и обратной совместимостью со старым процессором. Опять же, 
Open Sourсe позволяет простой перекомпиляцией получить программу под конкретный процессор.

Плюсы и минусы:

1) Подход VLIW сильно упрощает архитектуру процессора, перекладывая задачу распределения вычислительных устройств 
на компилятор. Поскольку отсутствуют большие и сложные узлы, сильно снижается энергопотребление.
2) В то же время код для VLIW обладает невысокой плотностью. 
Из-за большого количества пустых инструкций для простаивающих устройств программы для VLIW-процессоров 
могут быть гораздо длиннее, чем аналогичные программы для традиционных архитектур.
3) Архитектура VLIW выглядит довольно экзотической и непривычной для программиста. 
Из-за сложных внутренних зависимостей кода программирование вручную, 
на уровне машинных кодов для VLIW-архитектур, является достаточно сложным. 
Приходится полагаться на оптимизацию компилятора.

Многопроцессорный вычислительный комплекс «Эльбрус-3» и микропроцессоры серии «Эльбрус» («Эльбрус 2000», «Эльбрус S») 
являются VLIW-процессорами

Процессоры, выпускаемые фирмой Tilera, также имеют VLIW-архитектуру.

VLIW также получила хорошее распространение на рынке GPU, так, видеопроцессоры AMD/ATI Radeon начиная с 
R600 и до Northern Islands включительно имеют VLIW-архитектуру. Начиная с Southern Islands (первый квартал 2012) 
компания AMD/ATI отошла от подхода VLIW

Современные системы на кристалле Qualcomm Snapdragon фирмы Qualcomm, предназначенные для 
использования в качестве центрального процессора телефонов и планшетов, содержат сопроцессоры с VLIW-архитектурой Hexagon
(QDSP6). На нём могут выполняться алгоритмы обработки звука и мультимедиа, а также часть цифровой обработки 
беспроводных сигналов. Ежетактно могут запускаться на исполнение наборы из 4 инструкций; поддерживается аппаратная 
многопоточность (временное мультиплексирование, в частности, в некоторых версиях архитектуры — револьверного типа).

Примеры архитектуры: Intel Itanium, Эльбрус-3.